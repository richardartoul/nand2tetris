// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
  IN in[16], load, address[9];
  OUT out[16];

  PARTS:
  //Array of 8 RAM64's
  RAM64(in=in, load=RAM640Load, address=address[0..5], out=RAM640Out);
  RAM64(in=in, load=RAM641Load, address=address[0..5], out=RAM641Out);
  RAM64(in=in, load=RAM642Load, address=address[0..5], out=RAM642Out);
  RAM64(in=in, load=RAM643Load, address=address[0..5], out=RAM643Out);
  RAM64(in=in, load=RAM644Load, address=address[0..5], out=RAM644Out);
  RAM64(in=in, load=RAM645Load, address=address[0..5], out=RAM645Out);
  RAM64(in=in, load=RAM646Load, address=address[0..5], out=RAM646Out);
  RAM64(in=in, load=RAM647Load, address=address[0..5], out=RAM647Out);

  //Demultiplexor to load proper RAM64
  DMux8Way(
    a=RAM640Load,
    b=RAM641Load,
    c=RAM642Load,
    d=RAM643Load,
    e=RAM644Load,
    f=RAM645Load,
    g=RAM646Load,
    h=RAM647Load,
    in=load, sel=address[6..8]);

  Mux8Way16(
    a=RAM640Out,
    b=RAM641Out,
    c=RAM642Out,
    d=RAM643Out,
    e=RAM644Out,
    f=RAM645Out,
    g=RAM646Out,
    h=RAM647Out,
    sel=address[6..8], out=out);
}