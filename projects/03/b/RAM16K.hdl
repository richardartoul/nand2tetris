// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
  IN in[16], load, address[14];
  OUT out[16];

  PARTS:
  //Array of 4 RAM4K's
  RAM4K(in=in, load=RAM4K0Load, address=address[0..11], out=RAM4K0Out);
  RAM4K(in=in, load=RAM4K1Load, address=address[0..11], out=RAM4K1Out);
  RAM4K(in=in, load=RAM4K2Load, address=address[0..11], out=RAM4K2Out);
  RAM4K(in=in, load=RAM4K3Load, address=address[0..11], out=RAM4K3Out);

  //Demultiplexor to load proper RAM4K
  DMux4Way(
    a=RAM4K0Load,
    b=RAM4K1Load,
    c=RAM4K2Load,
    d=RAM4K3Load,
    in=load, sel=address[12..13]);

  Mux4Way16(
    a=RAM4K0Out,
    b=RAM4K1Out,
    c=RAM4K2Out,
    d=RAM4K3Out,
    sel=address[12..13], out=out);
}